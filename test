#!/usr/bin/env ruby

# `cabal build`
# path = "dist-newstyle/build/x86_64-linux/ghc-9.4.8/latte-0.1.0.0/x/checker/build/checker/checker"
`make`
path = "./latc"

def red(str)
  puts "\e[31m#{str}\e[0m"
end

def green(str)
  puts "\e[32m#{str}\e[0m"
end

def blue(str)
  puts "\e[34m#{str}\e[0m"
end

if ARGV.size == 1
  test = ARGV[0]
  blue "testing #{test}"
  out = `#{path} #{test}`
  blue out
  if (out.include?("OK") && test.include?("bad")) || (!out.include?("OK") && test.include?("good"))
    red "#{test} FAILED" 
  else
    green "#{test} PASSED"
  end

  return
end

blue "Testing bad files"

bad = [0,0]
good = [0,0]

Dir.glob("lattests/bad/*.lat").sort.each do |f|
  out = `#{path} #{f}`
  blue out
  if out.include?("OK")
    red "#{f} FAILED" 
    bad[1] += 1
  else
    green "#{f} PASSED"
    bad[0] += 1
  end
end

# blue "Testing good files"
# Dir.glob("lattests/good/*.lat").sort.each do |f|
#   blue "Testing #{f}"
#   out = `#{path} #{f}`
#   blue out
#   if out.include?("OK")
#     green "#{f} PASSED"
#     good[0] += 1
#   else
#     red "#{f} FAILED" 
#     good[1] += 1
#   end
# end

blue "BAD TESTS #{bad[0]}/#{bad[0] + bad[1]}"
# blue "GOOD TESTS #{good[0]}/#{good[0] + good[1]}"
